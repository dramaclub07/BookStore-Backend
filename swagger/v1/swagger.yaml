openapi: 3.0.1
info:
  title: Bookstore API
  description: API documentation for user authentication and book management
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
    description: Local server

paths:
  ############################
  # Users Routes
  ############################
  /signup:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    full_name:
                      type: string
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                      format: password
                    mobile_number:
                      type: string
      responses:
        '201':
          description: User registered successfully
        '422':
          description: Email has already been taken

  /login:
    post:
      summary: User login
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid email or password

  /forgot_password:
    post:
      summary: Forgot password request
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: OTP sent to your email
        '422':
          description: User not found

  /reset_password:
    post:
      summary: Reset password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                otp:
                  type: string
                new_password:
                  type: string
                  format: password
      responses:
        '200':
          description: Password reset successfully
        '422':
          description: Invalid OTP or User not found

  ############################
  # Books Routes
  ############################
  /books:
    get:
      summary: Get all books
      tags:
        - Books
      responses:
        '200':
          description: Returns all books

  /books/{id}:
    get:
      summary: Get book by ID
      tags:
        - Books
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the book details

    put:
      summary: Update book details
      tags:
        - Books
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_name:
                  type: string
                author_name:
                  type: string
                book_mrp:
                  type: number
                discounted_price:
                  type: number
                quantity:
                  type: integer
                book_details:
                  type: string
                genre:
                  type: string
                book_image:
                  type: string
                is_deleted:
                  type: boolean
      responses:
        '200':
          description: Book updated successfully

  /books/create:
    post:
      summary: Create a new book
      tags:
        - Books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_name:
                  type: string
                author_name:
                  type: string
                book_mrp:
                  type: number
                discounted_price:
                  type: number
                quantity:
                  type: integer
                book_details:
                  type: string
                genre:
                  type: string
                book_image:
                  type: string
      responses:
        '201':
          description: Book created successfully

  /books/{id}/is_deleted:
    patch:
      summary: Mark book as deleted
      tags:
        - Books
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book marked as deleted
