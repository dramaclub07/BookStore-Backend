openapi: 3.0.1
info:
  title: Bookstore API
  description: API documentation for user authentication, book management, and reviews
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
    description: Local server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

paths:
  ############################
  # Users Routes
  ############################
  /users:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    full_name:
                      type: string
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                      format: password
                    mobile_number:
                      type: string
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    $ref: '#/components/schemas/User'
        "422":
          description: Email has already been taken
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string

  /users/login:
    post:
      summary: User login
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: Login successful, returns access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
        "401":
          description: Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /users/password/forgot:
    post:
      summary: Forgot password request
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        "200":
          description: OTP sent to your email
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "422":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /users/password/reset:
    post:
      summary: Reset password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                otp:
                  type: string
                new_password:
                  type: string
                  format: password
      responses:
        "200":
          description: Password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "422":
          description: Invalid OTP or User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /users/profile:
    get:
      summary: Get user profile
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    $ref: '#/components/schemas/User'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

    patch:
      summary: Update user profile
      tags:
        - Users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    full_name:
                      type: string
                    mobile_number:
                      type: string
      responses:
        "200":
          description: User profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    $ref: '#/components/schemas/User'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "422":
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string

  /google_auth:
    post:
      summary: Authenticate with Google
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        "200":
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
        "401":
          description: Invalid Google token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /facebook_auth:
    post:
      summary: Authenticate with Facebook
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        "200":
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
        "401":
          description: Invalid Facebook token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  ############################
  # Books Routes
  ############################
  /books:
    get:
      summary: Get all books
      tags:
        - Books
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Returns all books
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'

    post:
      summary: Create a new book
      tags:
        - Books
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_name:
                  type: string
                author_name:
                  type: string
                book_mrp:
                  type: number
                discounted_price:
                  type: number
                quantity:
                  type: integer
                book_details:
                  type: string
                genre:
                  type: string
                book_image:
                  type: string
      responses:
        "201":
          description: Book created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  book:
                    $ref: '#/components/schemas/Book'

  /books/search:
    get:
      summary: Search for books
      tags:
        - Books
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
        "400":
          description: Invalid search query
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /books/search_suggestions:
    get:
      summary: Get book search suggestions
      tags:
        - Books
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns book search suggestions
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  suggestions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        book_name:
                          type: string
                        author_name:
                          type: string
        "400":
          description: Invalid search query
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /books/available:
    get:
      summary: Get all available books
      tags:
        - Books
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Returns all available books
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'

  /books/{id}:
    get:
      summary: Get book by ID
      tags:
        - Books
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the book details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  book:
                    $ref: '#/components/schemas/Book'
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

    put:
      summary: Update book details
      tags:
        - Books
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_name:
                  type: string
                author_name:
                  type: string
                book_mrp:
                  type: number
                discounted_price:
                  type: number
                quantity:
                  type: integer
                book_details:
                  type: string
                genre:
                  type: string
                book_image:
                  type: string
                is_deleted:
                  type: boolean
      responses:
        "200":
          description: Book updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  book:
                    $ref: '#/components/schemas/Book'
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

    delete:
      summary: Delete a book
      tags:
        - Books
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Book deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /books/{id}/is_deleted:
    patch:
      summary: Toggle book deletion status
      tags:
        - Books
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Book deletion status toggled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  book:
                    $ref: '#/components/schemas/Book'
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  ############################
  # Carts Routes
  ############################
  /carts:
    get:
      summary: Get cart details
      tags:
        - Carts
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Cart items retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  carts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /carts/{id}:
    post:
      summary: Add item to the cart
      tags:
        - Carts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the book to add to the cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        "200":
          description: Book added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  cart:
                    $ref: '#/components/schemas/Cart'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "400":
          description: Invalid request, Missing Book ID or Quantity
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

    patch:
      summary: Update item quantity in the cart
      tags:
        - Carts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the cart item to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        "200":
          description: Cart item quantity updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  cart:
                    $ref: '#/components/schemas/Cart'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "404":
          description: Cart item not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /carts/{id}/delete:
    patch:
      summary: Toggle item removal from cart
      tags:
        - Carts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the cart item to toggle removal
      responses:
        "200":
          description: Cart item removal toggled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "404":
          description: Cart item not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /carts/summary:
    get:
      summary: Get cart summary
      tags:
        - Carts
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Cart summary retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  summary:
                    type: object
                    properties:
                      total_items:
                        type: integer
                      total_price:
                        type: number
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  ############################
  # Reviews Routes
  ############################
  /books/{book_id}/reviews:
    post:
      summary: Add a review for a book
      tags:
        - Reviews
      security:
        - BearerAuth: []
      parameters:
        - name: book_id
          in: path
          description: ID of the book to review
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - review
              properties:
                review:
                  type: object
                  required:
                    - rating
                  properties:
                    rating:
                      type: integer
                      minimum: 1
                      maximum: 5
                      description: Rating from 1-5
                    comment:
                      type: string
                      description: Review comment
      responses:
        "201":
          description: Review created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  review:
                    $ref: '#/components/schemas/Review'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "422":
          description: Validation error (e.g., invalid rating)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string

    get:
      summary: Get all reviews for a book
      tags:
        - Reviews
      parameters:
        - name: book_id
          in: path
          description: ID of the book
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of reviews
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /books/{book_id}/reviews/{id}:
    get:
      summary: Get a specific review
      tags:
        - Reviews
      parameters:
        - name: book_id
          in: path
          description: ID of the book
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: ID of the review
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Review details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  review:
                    $ref: '#/components/schemas/Review'
        "404":
          description: Review not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

    patch:
      summary: Update a specific review
      tags:
        - Reviews
      security:
        - BearerAuth: []
      parameters:
        - name: book_id
          in: path
          description: ID of the book
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: ID of the review to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - review
              properties:
                review:
                  type: object
                  properties:
                    rating:
                      type: integer
                      minimum: 1
                      maximum: 5
                      description: Rating from 1-5
                    comment:
                      type: string
                      description: Review comment
      responses:
        "200":
          description: Review updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  review:
                    $ref: '#/components/schemas/Review'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "403":
          description: Forbidden - User not authorized to update this review
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "404":
          description: Review not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "422":
          description: Validation error (e.g., invalid rating)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string

    delete:
      summary: Delete a review
      tags:
        - Reviews
      security:
        - BearerAuth: []
      parameters:
        - name: book_id
          in: path
          description: ID of the book
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: ID of the review to delete
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Review deleted successfully
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "403":
          description: Forbidden - User not authorized to delete this review
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "404":
          description: Review not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  ############################
  # Wishlist Routes
  ############################
  /wishlists:
    get:
      summary: Get all books in the wishlist
      tags:
        - Wishlist
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Returns all books in the wishlist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  wishlists:
                    type: array
                    items:
                      $ref: '#/components/schemas/Wishlist'
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

    post:
      summary: Add or remove book from wishlist (Toggle)
      tags:
        - Wishlist
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_id:
                  type: integer
                  description: ID of the book to add or remove from wishlist
      responses:
        "200":
          description: Successfully toggled wishlist status
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: "Book added to wishlist"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "401":
          description: Unauthorized (Invalid or missing JWT)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  ############################
  # Addresses Routes
  ############################
  /addresses:
    get:
      summary: Get all addresses for the authenticated user
      tags:
        - Addresses
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Returns a list of the user's addresses
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  addresses:
                    type: array
                    items:
                      $ref: '#/components/schemas/Address'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /addresses/create:
    post:
      summary: Create a new address for the authenticated user
      tags:
        - Addresses
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressInput'
      responses:
        "201":
          description: Address created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  address:
                    $ref: '#/components/schemas/Address'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "422":
          description: Validation failed (e.g., missing required fields)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string

  /addresses/{id}:
    get:
      summary: Get a specific address by ID
      tags:
        - Addresses
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the address details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  address:
                    $ref: '#/components/schemas/Address'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "404":
          description: Address not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

    patch:
      summary: Update an existing address (partial update)
      tags:
        - Addresses
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressInput'
      responses:
        "200":
          description: Address updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  address:
                    $ref: '#/components/schemas/Address'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "404":
          description: Address not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "422":
          description: Validation failed (e.g., invalid address_type)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string

    delete:
      summary: Delete an address
      tags:
        - Addresses
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Address deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "404":
          description: Address not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  ############################
  # Orders Routes
  ############################
  /orders:
    get:
      summary: Get all orders for the logged-in user
      tags:
        - Orders
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

    post:
      summary: Create a new order
      tags:
        - Orders
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address_id:
                  type: integer
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "422":
          description: Validation error (e.g., empty cart, invalid address_id)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /orders/{id}:
    get:
      summary: Get order details by ID
      tags:
        - Orders
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Order details retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  order:
                    $ref: '#/components/schemas/Order'
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /orders/{id}/cancel:
    patch:
      summary: Cancel an order
      tags:
        - Orders
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Order canceled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  order:
                    $ref: '#/components/schemas/Order'
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "422":
          description: Order already canceled
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /orders/{id}/update:
    patch:
      summary: Update the status of an order
      tags:
        - Orders
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: ["pending", "processing", "shipped", "delivered", "cancelled"]
                  example: "shipped"
      responses:
        "200":
          description: Order status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  order:
                    $ref: '#/components/schemas/Order'
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "422":
          description: Invalid status
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        full_name:
          type: string
        email:
          type: string
          format: email
        mobile_number:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Book:
      type: object
      properties:
        id:
          type: integer
        book_name:
          type: string
        author_name:
          type: string
        book_mrp:
          type: number
        discounted_price:
          type: number
        quantity:
          type: integer
        book_details:
          type: string
        genre:
          type: string
        book_image:
          type: string
        is_deleted:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Cart:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        book_id:
          type: integer
        quantity:
          type: integer
        is_deleted:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Wishlist:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        book_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Address:
      type: object
      properties:
        id:
          type: integer
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string
        address_type:
          type: string
          enum:
            - home
            - work
            - other
        is_default:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    AddressInput:
      type: object
      required:
        - street
        - city
        - state
        - zip_code
        - country
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string
        address_type:
          type: string
          enum:
            - home
            - work
            - other
        is_default:
          type: boolean

    Order:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        book_id:
          type: integer
        quantity:
          type: integer
        price_at_purchase:
          type: number
        total_price:
          type: number
        status:
          type: string
          enum: ["pending", "processing", "shipped", "delivered", "cancelled"]
        address_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Review:
      type: object
      properties:
        id:
          type: integer
        book_id:
          type: integer
        user_id:
          type: integer
        user_name:
          type: string
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time